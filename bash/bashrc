#!/bin/bash

PS4='+ [$BASHPID]: '

if [[ ! $STY && -t 0 ]] ; then
    exec 3>~/.bashrc.log
    BASH_XTRACEFD=3
    set -x
else
    exec 3>/dev/null
fi

if [[ $0 != $BASH_SOURCE ]] ; then

export PATH=$HOME/bin:$PATH
export MANPATH=$HOME/share/man:$MANPATH

if [[ ! $STY && -t 0 ]] ; then
    scrlist=( 
        $(
            socketdirs=(
                $HOME/.screen
                /run/screens/S-$USER
                /tmp/uscreens/S-$USER
            )

            for d in "${socketdirs[@]}" ; do
                if [[ -d $d ]] ; then
                    ls -1 2>/dev/null $d/
                fi
            done
        )
        'New screen session'
        'Drop to shell'
    )
    screen=
    noscr=

    if (( ${#scrlist[@]} > 0 )) ; then
        echo "Existing screens available, reconnect?:"
        echo

        select x in "${scrlist[@]}" ; do
            if [[ ! $x ]] ; then
                continue
            fi

            case $x in
            (Drop*) noscr=1 ;;
            (New*) ;;
            (*) screen=$x ;;
            esac
            break
        done
    fi

    if [[ ! $noscr ]] ; then
        if [[ $screen ]] ; then
            screen -d $screen || true
        fi

        set +x
        unset BASH_XTRACEFD
        exec 3>/dev/null

        if screen ${screen:+-r $screen} ; then
            exit 0
        fi

        exec 3>>~/.bashrc.log
        BASH_XTRACEFD=3
        set -x
    fi
fi

shopt -s extglob

echo >&3 $(date) Executing bashrc

export TOOLS_BASHRC=$(readlink -f "$BASH_SOURCE")
export TOOLSDIR=${TOOLS_BASHRC%/bash/*}

if [[ -e /usr/share/terminfo/x/xterm-256color ]] ; then
    export TERM="xterm-256color"
else
    export TERM="xterm-color"
fi

includes=( \
    $TOOLSDIR/bash/env \
    $TOOLSDIR/bash/paths \
    $TOOLSDIR/bash/functions \
    $HOME/.bash_env \
)

if [[ -t 0 ]] ; then
    includes=( \
        /etc/bashrc \
        /etc/bash.bashrc \
        "${includes[@]}" \
        $TOOLSDIR/bash/aliases \
        $HOME/.bash_alias \
    )
fi

echo >&3 $(date) Loading includes
for include in "${includes[@]}" ; do
    [[ -r $include ]] && . $include
done
echo >&3 $(date) Done loading includes
unset include
unset includes

if [[ -t 0 ]] ; then
    echo >&3 $(date) Loading completion
    completioncmd='[[ -r /etc/bash_completion ]] && . /etc/bash_completion'
    case $HOSTNAME in
    (buffalo)
        # Loading completion takes time, provide a loader instead
        alias loadcompletion="$completioncmd"
        ;;
    (*)
        eval $completioncmd
        ;;
    esac
    echo >&3 $(date) Done loading completion

    if [[ -n "$DISPLAY" && -f $HOME/.Xdefaults ]] && which xrdb 1>/dev/null 2>&1 ; then
        echo >&3 $(date) Merging Xdefaults with xrdb
        xrdb -merge $HOME/.Xdefaults
    fi

    if [[ -r $TOOLSDIR && -x $TOOLSDIR ]]; then
        [[ $PWD = $HOME && -f $MYCHDIRCWD ]] && CHDIR="$(cat $MYCHDIRCWD)"
        [[ ! -d "$CHDIR" ]] && unset CHDIR

        MYCHDIR_PID=$BASHPID
        mychdir "${CHDIR:-${PWD}}" 1>&3

        if [[ "$TERM" = "xterm"* ]]; then
            PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND;} myprompt_command"
        fi

        if [[ $UID -ne 0 ]]; then
            # export WINDOW_MANAGER="metacity"
            
            if which ssh 1>&3 2>&3 ; then
                echo >&3 $(date) Attaching to SSH agent
                ssh_attach
                if ! ssh-add -L 1>&3 2>&3 ; then
                    echo >&3 $(date) Adding SSH identity
                    ssh-add
                fi
            fi
        fi
    fi
fi

echo >&3 $(date) Finished executing bashrc
set +x
exec 3>&-

# http://www.ukuug.org/events/linux2003/papers/bash_tips/

fi # [[ $0 != $BASH_SOURCE ]]
